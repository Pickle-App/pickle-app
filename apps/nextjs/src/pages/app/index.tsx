import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../../utils/trpc";
import type { inferProcedureOutput } from "@trpc/server";
import type { AppRouter } from "@pickle-app/api";
import { useClerk } from "@clerk/nextjs";
import { useUser } from "@clerk/nextjs";

const Home: NextPage = () => {
  const { user } = useUser();
  const { data: allUserProfiles } = trpc.get.all.useQuery();
  const { data: pickleUserProfile } = trpc.get.byId.useQuery(2);
  const clerkUserId = user?.id;
  const pickleProfileClerkId = pickleUserProfile?.clerk_user_id;

  if (clerkUserId != pickleProfileClerkId) {
    console.log(clerkUserId);
    console.log(pickleProfileClerkId);
  }

  return (
    <>
      <Head>
        <title>Welcome</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/pickle-icon.png" />
      </Head>
      <main className="flex-grow flex-col items-center overflow-hidden bg-gradient-to-b from-[#2e026d] to-[#15162c] text-white">
        <div className="flex h-full flex-col items-center justify-between gap-12 px-4 py-8">
          <h1 className="text-5xl font-extrabold tracking-tight sm:text-[5rem]">
            Welcome to{" "}
            <span className="text-[hsl(280,100%,70%)]">Palisade</span>
          </h1>
          <AuthShowcase />
          <SignOutButton />
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery();
  const { user } = useUser();
  const clerkUserId = user?.id;

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <>
        <p className="text-center text-2xl text-white">
          {secretMessage && (
            <span>
              {" "}
              {secretMessage + " " + user?.firstName}
              <br />
            </span>
          )}
        </p>
        <div className="flex items-center justify-center">{clerkUserId}</div>
      </>
    </div>
  );
};

const SignOutButton: React.FC = () => {
  const { signOut } = useClerk();
  return (
    <button
      onClick={() => {
        signOut();
      }}
    >
      Sign out
    </button>
  );
};
